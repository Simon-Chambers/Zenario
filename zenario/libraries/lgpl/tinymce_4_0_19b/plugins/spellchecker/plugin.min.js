(function(I,G){function L(n,l){for(var c,w=[],p=0;p<n.length;++p){if(!(c=H[n[p]]))a:{c=I;for(var r=n[p].split(/[.\/]/),x=0;x<r.length;++x){if(!c[r[x]]){c=void 0;break a}c=c[r[x]]}}if(!c)throw"module definition dependecy not found: "+n[p];w.push(c)}l.apply(null,w)}function J(n,l,c){if("string"!==typeof n)throw"invalid module definition, module id must be defined and be a string";if(l===G)throw"invalid module definition, dependencies must be specified";if(c===G)throw"invalid module definition, definition function must be specified";
L(l,function(){H[n]=c.apply(null,arguments)})}var H={};J("tinymce/spellcheckerplugin/DomTextMatcher",[],function(){return function(n,l){function c(a,d){if(!a[0])throw"findAndReplaceDOMText cannot handle zero-length matches";return{start:a.index,end:a.index+a[0].length,text:a[0],data:d}}function w(a){var d;if(3===a.nodeType)return a.data;if(C[a.nodeName]&&!u[a.nodeName])return"";d="";if(u[a.nodeName]||B[a.nodeName])d+="\n";if(a=a.firstChild){do d+=w(a);while(a=a.nextSibling)}return d}function p(a,
d,y){var b,e,f,k,v=[],m=0,g=a,s,t=0;d=d.slice(0);d.sort(function(a,k){return a.start-k.start});s=d.shift();a:for(;;){(u[g.nodeName]||B[g.nodeName])&&m++;3===g.nodeType&&(!e&&g.length+m>=s.end?(e=g,k=s.end-m):b&&v.push(g),!b&&g.length+m>s.start&&(b=g,f=s.start-m),m+=g.length);if(b&&e){if(g=y({startNode:b,startNodeIndex:f,endNode:e,endNodeIndex:k,innerNodes:v,match:s.text,matchIndex:t}),m-=e.length-k,e=b=null,v=[],s=d.shift(),t++,!s)break}else if((!C[g.nodeName]||u[g.nodeName])&&g.firstChild){g=g.firstChild;
continue}else if(g.nextSibling){g=g.nextSibling;continue}for(;;)if(g.nextSibling){g=g.nextSibling;break}else if(g.parentNode!==a)g=g.parentNode;else break a}}function r(a){function d(d,b){var e=h[b];e.stencil||(e.stencil=a(e));e=e.stencil.cloneNode(!1);e.setAttribute("data-mce-index",b);d&&e.appendChild(D.doc.createTextNode(d));return e}return function(a){var b,e,f,k=a.startNode,v=a.endNode,m=a.matchIndex;e=D.doc;if(k===v)return f=k.parentNode,0<a.startNodeIndex&&(b=e.createTextNode(k.data.substring(0,
a.startNodeIndex)),f.insertBefore(b,k)),b=d(a.match,m),f.insertBefore(b,k),a.endNodeIndex<k.length&&(e=e.createTextNode(k.data.substring(a.endNodeIndex)),f.insertBefore(e,k)),k.parentNode.removeChild(k),b;b=e.createTextNode(k.data.substring(0,a.startNodeIndex));e=e.createTextNode(v.data.substring(a.endNodeIndex));var g=d(k.data.substring(a.startNodeIndex),m);f=[];for(var s=0,t=a.innerNodes.length;s<t;++s){var c=a.innerNodes[s],h=d(c.data,m);c.parentNode.replaceChild(h,c);f.push(h)}a=d(v.data.substring(0,
a.endNodeIndex),m);f=k.parentNode;f.insertBefore(b,k);f.insertBefore(g,k);f.removeChild(k);f=v.parentNode;f.insertBefore(a,v);f.insertBefore(e,v);f.removeChild(v);return a}}function x(a){var d=n.getElementsByTagName("*"),b=[];a="number"==typeof a?""+a:null;for(var c=0;c<d.length;c++){var e=d[c],f=e.getAttribute("data-mce-index");null!==f&&f.length&&(f!==a&&null!==a||b.push(e))}return b}function b(a){for(var d=h.length;d--;)if(h[d]===a)return d;return-1}function K(a){for(var d=0,b=h.length;d<b&&!1!==
a(h[d],d);d++);return this}function q(a){var d=x(a?b(a):null);for(a=d.length;a--;){var c=d[a];c.parentNode.insertBefore(c.firstChild,c);c.parentNode.removeChild(c)}return this}function E(a){a=x(b(a));var d=l.dom.createRng();d.setStartBefore(a[0]);d.setEndAfter(a[a.length-1]);return d}var F,h=[],A,D=l.dom,u,C,B;u=l.schema.getBlockElements();C=l.schema.getWhiteSpaceElements();B=l.schema.getShortEndedElements();A=w(n);return{text:A,matches:h,each:K,filter:function(a){var b=[];K(function(c,h){a(c,h)&&
b.push(c)});h=b;return this},reset:function(){h.splice(0,h.length);q();return this},matchFromElement:function(a){return h[a.getAttribute("data-mce-index")]},elementFromMatch:function(a){return x(b(a))[0]},find:function(a,b){if(A&&a.global)for(;F=a.exec(A);)h.push(c(F,b));return this},add:function(a,b,c){h.push({start:a,end:a+b,text:A.substr(a,b),data:c});return this},wrap:function(a){h.length&&p(n,h,r(a));return this},unwrap:q,replace:function(a,b){var c=E(a);c.deleteContents();0<b.length&&c.insertNode(l.dom.doc.createTextNode(b));
return c},rangeFromMatch:E,indexOf:b}}});J("tinymce/spellcheckerplugin/Plugin","tinymce/spellcheckerplugin/DomTextMatcher tinymce/PluginManager tinymce/util/Tools tinymce/ui/Menu tinymce/dom/DOMUtils tinymce/util/JSONRequest tinymce/util/URI".split(" "),function(n,l,c,w,p,r,x){l.add("spellchecker",function(b,l){function q(){a.textMatcher||(a.textMatcher=new n(b.getBody(),b));return a.textMatcher}function E(a){for(var b in a)return!1;return!0}function F(a){var e=[];c.each(d[a.text],function(c){e.push({text:c,
onclick:function(){var d=q().replace(a,c);d.collapse(!1);b.selection.setRng(d);A()}})});e.push.apply(e,[{text:"-"},{text:"Ignore",onclick:function(){D(a)}},{text:"Ignore all",onclick:function(){D(a,!0)}},{text:"Finish",onclick:u}]);z=new w({items:e,context:"contextmenu",onautohide:function(a){-1!=a.target.className.indexOf("spellchecker")&&a.preventDefault()},onhide:function(){z.remove();z=null}});z.renderTo(document.body);var m=q().elementFromMatch(a),g=p.DOM.getPos(b.getContentAreaContainer()),
f=b.dom.getPos(m),t=b.dom.getRoot();"BODY"==t.nodeName?(f.x-=t.ownerDocument.documentElement.scrollLeft||t.scrollLeft,f.y-=t.ownerDocument.documentElement.scrollTop||t.scrollTop):(f.x-=t.scrollLeft,f.y-=t.scrollTop);g.x+=f.x;g.y+=f.y;z.moveTo(g.x,g.y+m.offsetHeight)}function h(){function a(c){b.setProgressState(!1);E(c)?(b.windowManager.alert("No misspellings found"),y=!1):(d=c,q().filter(function(a){return!!c[a.text]}).wrap(function(){return b.dom.create("span",{"class":"mce-spellchecker-word","data-mce-bogus":1})}),
b.fire("SpellcheckStart"))}function c(a,d,k){r.sendRPC({url:(new x(l)).toAbsolute(e.spellchecker_rpc_url),method:a,params:{lang:e.spellchecker_language||"en",words:d},success:function(a){k(a)},error:function(a,c){a="JSON Parse error."==a?"Non JSON response:"+c.responseText:"Error: "+a;b.windowManager.alert(a);b.setProgressState(!1);u()}})}var f=[],g={};if(y)u();else{u();y=!0;var h=b.getParam("spellchecker_wordchar_pattern")||RegExp('[^\\s!"#$%&()*+,-./:;<=>?@[\\]^_{|}`\u00a7\u00a9\u00ab\u00ae\u00b1\u00b6\u00b7\u00b8\u00bb\u00bc\u00bd\u00be\u00bf\u00d7\u00f7\u00a4\u201d\u201c\u201e]+',
"g");q().find(h).each(function(a){a=a.text;g[a]||/^\d+$/.test(a)||1==a.length||(f.push(a),g[a]=!0)});b.setProgressState(!0);(e.spellchecker_callback||c)("spellcheck",f,a);b.focus()}}function A(){b.dom.select("span.mce-spellchecker-word").length||u()}function D(a,c){b.selection.collapse();c?q().each(function(b){b.text==a.text&&q().unwrap(b)}):q().unwrap(a);A()}function u(){q().reset();a.textMatcher=null;y&&(y=!1,b.fire("SpellcheckEnd"))}function C(a){var b=e.spellchecker_language;a.control.items().each(function(a){a.active(a.settings.data===
b)})}var B,a=this,d,y,z,e=b.settings;B=function(a,b){var d=[];c.each(b,function(a){d.push({selectable:!0,text:a.name,data:a.value})});return d}("Language",c.map((e.spellchecker_languages||"English=en,Danish=da,Dutch=nl,Finnish=fi,French=fr_FR,German=de,Italian=it,Polish=pl,Portuguese=pt_BR,Spanish=es,Swedish=sv").split(","),function(a){a=a.split("=");return{name:a[0],value:a[1]}}));b.on("click",function(a){"mce-spellchecker-word"==a.target.className&&(a.preventDefault(),a=q().matchFromElement(a.target),
b.selection.setRng(q().rangeFromMatch(a)),F(a))});b.addMenuItem("spellchecker",{text:"Spellcheck",context:"tools",onclick:h,selectable:!0,onPostRender:function(){var a=this;b.on("SpellcheckStart SpellcheckEnd",function(){a.active(y)})}});var f={tooltip:"Spellcheck",onclick:h,onPostRender:function(){var a=this;b.on("SpellcheckStart SpellcheckEnd",function(){a.active(y)})}};1<B.length&&(f.type="splitbutton",f.menu=B,f.onshow=C,f.onselect=function(a){e.spellchecker_language=a.control.settings.data});
b.addButton("spellchecker",f);b.addCommand("mceSpellCheck",h);b.on("remove",function(){z&&(z.remove(),z=null)});this.getTextMatcher=q;e.spellchecker_language=e.spellchecker_language||e.language||"en"})});(function(n){for(var l=0;l<n.length;l++){for(var c=I,w=n[l],p=w.split(/[.\/]/),r=0;r<p.length-1;++r)c[p[r]]===G&&(c[p[r]]={}),c=c[p[r]];c[p[p.length-1]]=H[w]}})(["tinymce/spellcheckerplugin/DomTextMatcher","tinymce/spellcheckerplugin/Plugin"])})(this);
